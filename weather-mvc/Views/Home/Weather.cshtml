@{ 
    ViewBag.title = "Weather";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")    
@Styles.Render("~/Content/bootstrap.css")
@Styles.Render("~/Content/weather.css")
        
<div class="grid">
    <div class='container'>        
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <p>
                    Enter city or ZIP code:
                    <div class="input-group ">
                        @Html.TextBox("location", "", new { @class = "form-control", @id = "inputText", @autocomplete="on"})
                        <span class="input-group-btn"><input type="submit" value="Get weather" class="btn btn-primary" id="submitButton" /></span>
                    </div>
                </p>
                <input type="button" value="Determine my location" class="btn btn-primary" id="locationButton" onclick="doLocationUpdate()" />
                <br />
                <p>
                    @Html.RadioButton("timescale", "daily", true) Daily Forecast
                    @Html.RadioButton("timescale", "hourly", false) 3 Hour Forecast
                </p>
            </div>
        </div>
    </div>
    <div id="responseContainer" >
    </div>
</div>

<script src="http://maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places" type="text/javascript"></script>

<script type="text/javascript">
    var placeFromGoogle;
    function doLocationUpdate() {
        if (!navigator.geolocation) $('#responseContainer').text("Your browser does not support geolocation.");
        navigator.geolocation.getCurrentPosition(positionReady);
        }
    function positionReady(position) {
        var latitude  = position.coords.latitude;
        var longitude = position.coords.longitude;
        var timescale = $('input[name=timescale]:checked').val();
        $('#responseContainer').text("Loading...");
        $('#responseContainer').load('@Url.Action("WeatherAnswerPartialFromLatLong", "Home")?latitude=' + encodeURIComponent(latitude) 
            + '&longitude=' + encodeURIComponent(longitude) + '&timescale=' + encodeURIComponent(timescale));
    }
    $(document).ready(function () {
        var autocomplete = new google.maps.places.Autocomplete(document.getElementById('inputText'));
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            placeFromGoogle = autocomplete.getPlace();
        });
        $('#submitButton').click(function () {
            var timescale = $('input[name=timescale]:checked').val();
            if (placeFromGoogle && placeFromGoogle.geometry) //Get by Lat/Long, thanks to Google.
            {
                $('#responseContainer').text("Loading...");
                $('#responseContainer').load('@Url.Action("WeatherAnswerPartialFromLatLong", "Home")?latitude=' + encodeURIComponent(placeFromGoogle.geometry.location.lat())
                    + '&longitude=' + encodeURIComponent(placeFromGoogle.geometry.location.lng()) + '&timescale=' + encodeURIComponent(timescale));
            }
            else //Get by NWS name or ZIP code.
            {
                var requestedCity = document.getElementById("inputText").value;

                $('#responseContainer').text("Loading...");
                $('#responseContainer').load('@Url.Action("WeatherAnswerPartial", "Home")?location=' + encodeURIComponent(requestedCity)
                    + '&timescale=' + encodeURIComponent(timescale));
            }
        });
        $('#inputText').keyup(function (e) {
            if (e.keyCode == 13) $('#submitButton').click();
        });
    });
</script>